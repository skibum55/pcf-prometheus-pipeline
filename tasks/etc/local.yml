# replace with `bosh status --uuid`
director_uuid: $(bosh status --uuid)
azs: ${azs}
network_name: ${network_name}

nginx:
  vm_type: ${vm_type_micro}
  vm_password: ${vm_password}
  static_ips: ${nginx_ip}
  local_properties:
    ssl_only: false
    grafana:
      https_port: 443
      http_port: 80

grafana:
  vm_type: ${vm_type_micro}
  vm_password: ${vm_password}
  persistent_disk_type: 1024
  admin_password: ${grafana_admin_password}
  anonymous_enabled: ${grafana_anonymous_enabled}
alertmanager:
  vm_type: ${vm_type_micro}
  vm_password: ${vm_password}
  persistent_disk_type: 1024
prometheus:
  vm_type: ${vm_type_small}
  vm_password: ${vm_password}
  persistent_disk_type: 5120

bosh_exporter:
  bosh:
    uaa:
      url: https://$(cat om-bosh-creds/director_ip):8443
      client_id: ${prometheus_bosh_client}
      client_secret: ${prometheus_bosh_secret}
    url: https://$(cat om-bosh-creds/director_ip)
    ca_cert: |
$(cat om-bosh-creds/bosh-ca.pem | awk '{printf "      %s\n", $0}')

firehose_exporter:
  uaa:
    url: https://uaa.${pcf_sys_domain}
    client_id: ${prometheus_firehose_client}
    client_secret: ${prometheus_firehose_secret}
  doppler:
    url: wss://doppler.${pcf_sys_domain}
  web:
    port: 9186
  skip_ssl_verify: true

cf_exporter:
  cf:
    api_url: https://api.${pcf_sys_domain}
    username: ${prometheus_cf_username}
    password: ${prometheus_cf_password}
    deployment_name: ${prometheus_cf_deployment_name}
  skip_ssl_verify: true
#
# mysqld_exporter:
#   mysql:
#     address: CHANGE_ME
#     username: exporter
#     password: CHANGE_ME

nats:
  password: ${nats_password}
  username: ${nats_username}
  machines: ${nats_machines}

grafana_route: grafana.${pcf_sys_domain}
